// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTScrollView
  ItemSeparatorComponent={undefined}
  ListHeaderComponent={[Function]}
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "sdkVersion",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "privacy",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "version",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "orientation",
      },
      Object {
        "data": Array [
          Object {
            "type": "color",
            "value": undefined,
          },
        ],
        "title": "primaryColor",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "iconUrl",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "notification.iconUrl",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "notification.color",
      },
      Object {
        "data": Array [
          Object {
            "value": "false",
          },
        ],
        "title": "ios.supportsTablet",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onViewableItemsChanged={undefined}
  renderItem={[Function]}
  renderScrollComponent={[Function]}
  renderSectionHeader={[Function]}
  scrollEventThrottle={50}
  sections={
    Array [
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "sdkVersion",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "privacy",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "version",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "orientation",
      },
      Object {
        "data": Array [
          Object {
            "type": "color",
            "value": undefined,
          },
        ],
        "title": "primaryColor",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "iconUrl",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "notification.iconUrl",
      },
      Object {
        "data": Array [
          Object {
            "value": undefined,
          },
        ],
        "title": "notification.color",
      },
      Object {
        "data": Array [
          Object {
            "value": "false",
          },
        ],
        "title": "ios.supportsTablet",
      },
    ]
  }
  stickyHeaderIndices={
    Array [
      1,
      4,
      7,
      10,
    ]
  }
  stickySectionHeadersEnabled={true}
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "paddingBottom": 15,
            "paddingHorizontal": 15,
            "paddingTop": 15,
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 15,
              "paddingTop": 2,
            }
          }
        >
          <Image
            resizeMode="cover"
            source={
              Object {
                "uri": "https://s3.amazonaws.com/exp-brand-assets/ExponentEmptyManifest_192.png",
              }
            }
            style={
              Object {
                "height": 64,
                "width": 64,
              }
            }
          />
        </View>
        <View
          style={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "600",
              }
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#a39f9f",
                "fontSize": 14,
              }
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#4d4d4d",
                "fontSize": 14,
                "marginTop": 6,
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fbfbfb",
            "borderColor": "#ededed",
            "borderWidth": 0.5,
            "paddingHorizontal": 15,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 14,
            }
          }
        >
          sdkVersion
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "paddingBottom": 12,
            "paddingHorizontal": 15,
            "paddingTop": 8,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#808080",
              "fontSize": 14,
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
    />
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fbfbfb",
            "borderColor": "#ededed",
            "borderWidth": 0.5,
            "paddingHorizontal": 15,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 14,
            }
          }
        >
          privacy
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "paddingBottom": 12,
            "paddingHorizontal": 15,
            "paddingTop": 8,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#808080",
              "fontSize": 14,
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
    />
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fbfbfb",
            "borderColor": "#ededed",
            "borderWidth": 0.5,
            "paddingHorizontal": 15,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 14,
            }
          }
        >
          version
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "paddingBottom": 12,
            "paddingHorizontal": 15,
            "paddingTop": 8,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#808080",
              "fontSize": 14,
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
    />
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fbfbfb",
            "borderColor": "#ededed",
            "borderWidth": 0.5,
            "paddingHorizontal": 15,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 14,
            }
          }
        >
          orientation
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "height": 0,
        }
      }
    />
  </View>
</RCTScrollView>
`;
